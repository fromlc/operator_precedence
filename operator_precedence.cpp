//-----------------------------------------------------------------------------
// operator_precedence.cpp
//
// Examples are from 
// https://www.splashlearn.com/math-vocabulary/algebra/order-of-operations#7-solved-examples-on-order-of-operations 
//-----------------------------------------------------------------------------
#include <iostream>

using namespace std;

//-----------------------------------------------------------------------------
// entry point
//-----------------------------------------------------------------------------
int main()
{
    //-------------------------------------------------------------------------
    // Math example 1
    //-------------------------------------------------------------------------
    // 2 + 6 * (4 + 5) / 3 - 5
    // 2 + 6 * 9 / 3 - 5
    // 2 + 54 / 3 - 5
    // 2 + 18 - 5
    // 2 + 13
    // 15

    //-------------------------------------------------------------------------
    // Math example 2
    //-------------------------------------------------------------------------
    // 4 - 5 / (8 - 3) * 2 + 5
    // 4 - 5 / 5 * 2 + 5
    // 4 - 1 * 2 + 5
    // 4 - 2 + 5
    // 2 + 5
    // 7

    //-------------------------------------------------------------------------
    // Logic example 1
    //-------------------------------------------------------------------------
    // 100 + 1 || 0
    // 101 || 0
    // true || 0
    // true || false
    // true

    //-------------------------------------------------------------------------
    // Logic example 2
    //-------------------------------------------------------------------------
    // 5 + 6 * 3 || 0 && 3
    // 5 + 18 || 0 && 3
    // 23 || 0 && 3
    // 23 || 0
    // true || false
    // true

    // Now it's your turn! Solve each expression below.
    // To get credit, you need to show each simplification step.
    // Put each step on a separate comment line, just like the
    // examples above.

    // Math expression 1:
    // 6 - 4 * 10

    // Math expression 2:
    // (48 / 6 + 2) * 8
    
    // Math expression 3:
    // 3 - 2 * 6 / 3 + 10

    // Math expression 4:
    // 13 - 24 / 4 * 3 + 9

    // Math expression 5:
    // 8 * 3 - 4 * (9 / 3 + 2)

    // Logic expression 1:
    // 0 && 1

    // Logic expression 2:
    // 0 || 2 * 5 && 1

    // Logic expression 3:
    // !(0 || 2 * 5 && 1)

    // Logic expression 4:
    // 3 - 4 && 100

    // Logic expression 5:
    // !(8 * 3) || 0

    return 0;

}
